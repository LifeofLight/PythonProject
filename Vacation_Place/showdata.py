# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'showdata.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import pymongo
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QTableWidgetItem
import dns


class Ui_Showdatapage(object):
    def __init__(self):
        self.tern = ''
        self.typed = ''
        self.province = ''
        self.opentime = ''
        self.name = ''
        self.lname = []

    def setupUi(self, Showdatapage):
        Showdatapage.setObjectName("Showdatapage")
        Showdatapage.resize(799, 476)
        self.lblType = QtWidgets.QLabel(Showdatapage)
        self.lblType.setGeometry(QtCore.QRect(260, 10, 271, 91))
        font = QtGui.QFont()
        font.setFamily("Itim")
        font.setPointSize(14)
        self.lblType.setFont(font)
        self.lblType.setText("")
        self.lblType.setAlignment(QtCore.Qt.AlignCenter)
        self.lblType.setObjectName("lblType")
        self.butBack = QtWidgets.QPushButton(Showdatapage)
        self.butBack.setGeometry(QtCore.QRect(20, 20, 71, 31))
        font = QtGui.QFont()
        font.setFamily("Itim")
        self.butBack.setFont(font)
        self.butBack.setStyleSheet("QPushButton{\n"
                                  "background-color: #ddd;\n"
                                  "border: none;\n"
                                  "color: black;\n"
                                  "transition: 0.3s;\n"
                                  "}\n"
                                  "QPushButton:hover{\n"
                                  "transition-delay:3s;\n"
                                  "background-color:#4CAF50;\n"
                                  "color: rgb(255, 255, 255);\n"
                                  "}")

        self.butBack.setObjectName("butBack")
        self.but_Home = QtWidgets.QPushButton(Showdatapage)
        self.but_Home.setGeometry(QtCore.QRect(710, 20, 71, 31))
        font = QtGui.QFont()
        font.setFamily("Itim")
        self.but_Home.setFont(font)
        self.but_Home.setStyleSheet("QPushButton{\n"
                                  "background-color: #ddd;\n"
                                  "border: none;\n"
                                  "color: black;\n"
                                  "transition: 0.3s;\n"
                                  "}\n"
                                  "QPushButton:hover{\n"
                                  "transition-delay:3s;\n"
                                  "background-color:#4CAF50;\n"
                                  "color: rgb(255, 255, 255);\n"
                                  "}")
        self.but_Home.setObjectName("but_Home")
        self.widgetComment = QtWidgets.QWidget(Showdatapage)
        self.widgetComment.setGeometry(QtCore.QRect(270, 140, 251, 171))
        self.widgetComment.setObjectName("widgetComment")
        self.widgetComment.setStyleSheet("background-color: white")

        self.widgetComment.setVisible(False)
        self.comboBox = QtWidgets.QComboBox(self.widgetComment)
        self.comboBox.setGeometry(QtCore.QRect(20, 70, 211, 31))
        self.comboBox.setObjectName("comboBox")
        self.label = QtWidgets.QLabel(self.widgetComment)
        self.label.setGeometry(QtCore.QRect(20, 20, 211, 31))
        font = QtGui.QFont()
        font.setFamily("Itim")
        font.setPointSize(10)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.pushButton_2 = QtWidgets.QPushButton(self.widgetComment)
        self.pushButton_2.setGeometry(QtCore.QRect(70, 140, 101, 21))
        self.pushButton_2.setStyleSheet("QPushButton{\n"
                                  "background-color: #ddd;\n"
                                  "border: none;\n"
                                  "color: black;\n"
                                  "transition: 0.3s;\n"
                                  "}\n"
                                  "QPushButton:hover{\n"
                                  "transition-delay:3s;\n"
                                  "background-color:#4CAF50;\n"
                                  "color: rgb(255, 255, 255);\n"
                                  "}")
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton = QtWidgets.QPushButton(Showdatapage)
        self.pushButton.setGeometry(QtCore.QRect(350, 420, 71, 31))
        self.pushButton.setStyleSheet("QPushButton{\n"
                                  "background-color: #ddd;\n"
                                  "border: none;\n"
                                  "color: black;\n"
                                  "transition: 0.3s;\n"
                                  "}\n"
                                  "QPushButton:hover{\n"
                                  "transition-delay:3s;\n"
                                  "background-color:#4CAF50;\n"
                                  "color: rgb(255, 255, 255);\n"
                                  "}")
        self.pushButton.setObjectName("pushButton")
        self.tbwshow_2 = QtWidgets.QTableWidget(Showdatapage)
        self.tbwshow_2.setGeometry(QtCore.QRect(50, 70, 701, 321))
        font = QtGui.QFont()
        font.setFamily("Itim")
        font.setPointSize(12)
        self.tbwshow_2.setFont(font)
        self.tbwshow_2.setObjectName("tbwshow_2")
        self.tbwshow_2.setColumnCount(0)
        self.tbwshow_2.setRowCount(0)
        self.tbwshow_2.raise_()
        self.lblType.raise_()
        self.butBack.raise_()
        self.but_Home.raise_()
        self.widgetComment.raise_()
        self.pushButton.raise_()

        self.retranslateUi(Showdatapage)
        QtCore.QMetaObject.connectSlotsByName(Showdatapage)

        self.butBack.clicked.connect(self.Gotoselect)
        self.but_Home.clicked.connect(self.backtoMain)
        self.pushButton.clicked.connect(self.Comment)
        self.thiswindow = Showdatapage

    def settext(self, tern, typed, province, opentime):
        self.tern = tern
        self.typed = typed
        self.province = province
        self.opentime = opentime
        self.lblType.setText(self.typed)

    def gotoComment(self):
        self.name = self.comboBox.currentText()
        from comment import Ui_comment
        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_comment()
        self.ui.setupUi(self.window)
        self.ui.settext(self.tern, self.typed, self.province, self.name,self.opentime)
        self.window.show()
        self.thiswindow.hide()

    def backtoMain(self):
        from MainMeni import Ui_MainWindow
        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow()
        self.ui.setupUi(self.window)
        self.window.show()
        self.thiswindow.hide()

    def Gotoselect(self):
        from selectdata import Ui_selectdatapage
        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_selectdatapage()
        self.ui.setupUi(self.window)
        self.ui.settext(self.tern)
        self.ui.setcmbProvince(self.tern)
        self.ui.display(self.tern)
        self.window.show()
        self.thiswindow.hide()

    def Comment(self):
        self.widgetComment.setVisible(True)
        self.comboBox.addItems(self.lname)
        self.pushButton_2.clicked.connect(self.gotoComment)

    def display(self):
        connectMongodb = 'mongodb+srv://Kornwara:2tIbDeNWUF7Yjswi@cluster0.ezb5a.mongodb.net/<dbname>?retryWrites=true&w=majority'
        with pymongo.MongoClient(connectMongodb) as conn:
            db = conn.get_database('VacationPlace')
            have = True
            where = {'$and': [{'ภาค': self.tern}, {'Province': self.province}, {'attractions': {'$exists': have}}]}
            cursor = db.Province.find(where)
            cursor1 = db.Province.find(where)
        setrow = 0
        for h in cursor1:
            if self.typed == 'attractions' or self.typed == 'restaurant':
                for g in h[self.typed]:
                    if (g['opentime'] >= float(self.opentime)):
                        setrow += 1
                    elif self.typed == 'resting_place':
                        for g in h[self.typed]:
                            setrow += 1

        self.tbwshow_2.setColumnCount(8)
        if self.typed == 'attractions' or self.typed == 'restaurant':
            header1 = QtWidgets.QTableWidgetItem('Province')
            header2 = QtWidgets.QTableWidgetItem('name')
            header3 = QtWidgets.QTableWidgetItem('place')
            header4 = QtWidgets.QTableWidgetItem('openday')
            header5 = QtWidgets.QTableWidgetItem('opentime')
            header6 = QtWidgets.QTableWidgetItem('closetime')
            header7 = QtWidgets.QTableWidgetItem('phone')
            header8 = QtWidgets.QTableWidgetItem('webside')

        elif self.typed == 'resting_place':
            header1 = QtWidgets.QTableWidgetItem('Province')
            header2 = QtWidgets.QTableWidgetItem('name')
            header3 = QtWidgets.QTableWidgetItem('place')
            header4 = QtWidgets.QTableWidgetItem('room')
            header5 = QtWidgets.QTableWidgetItem('phone')
            header6 = QtWidgets.QTableWidgetItem('pool')
            header7 = QtWidgets.QTableWidgetItem('food_room')
            header8 = QtWidgets.QTableWidgetItem('check_in-out')

        self.tbwshow_2.setHorizontalHeaderItem(0, header1)
        self.tbwshow_2.setHorizontalHeaderItem(1, header2)
        self.tbwshow_2.setHorizontalHeaderItem(2, header3)
        self.tbwshow_2.setHorizontalHeaderItem(3, header4)
        self.tbwshow_2.setHorizontalHeaderItem(4, header5)
        self.tbwshow_2.setHorizontalHeaderItem(5, header6)
        self.tbwshow_2.setHorizontalHeaderItem(6, header7)
        self.tbwshow_2.setHorizontalHeaderItem(7, header8)
        header = self.tbwshow_2.horizontalHeader()
        header.setSectionResizeMode(0, QtWidgets.QHeaderView.Stretch)
        header.setSectionResizeMode(0, QtWidgets.QHeaderView.ResizeToContents)
        header.setSectionResizeMode(1, QtWidgets.QHeaderView.ResizeToContents)
        header.setSectionResizeMode(2, QtWidgets.QHeaderView.ResizeToContents)
        header.setSectionResizeMode(3, QtWidgets.QHeaderView.ResizeToContents)
        header.setSectionResizeMode(4, QtWidgets.QHeaderView.ResizeToContents)
        header.setSectionResizeMode(5, QtWidgets.QHeaderView.ResizeToContents)
        header.setSectionResizeMode(6, QtWidgets.QHeaderView.ResizeToContents)
        header.setSectionResizeMode(7, QtWidgets.QHeaderView.ResizeToContents)
        row = 0
        for i in cursor:
            if self.typed == 'attractions' or self.typed == 'restaurant':
                self.tbwshow_2.setRowCount(setrow)
                for j in i[self.typed]:
                    if (j['opentime'] >= float(self.opentime)):
                        self.tbwshow_2.setItem(row, 0, QTableWidgetItem("{}".format(i['Province'])))
                        self.tbwshow_2.setItem(row, 1, QTableWidgetItem("{}".format(j['name'])))
                        self.tbwshow_2.setItem(row, 2, QTableWidgetItem("{}".format(j['place'])))
                        self.tbwshow_2.setItem(row, 3, QTableWidgetItem("{}".format(j['openday'])))
                        self.tbwshow_2.setItem(row, 4, QTableWidgetItem("{:.2f}".format(j['opentime'])))
                        self.tbwshow_2.setItem(row, 5, QTableWidgetItem("{}".format(j['closetime'])))
                        self.tbwshow_2.setItem(row, 6, QTableWidgetItem("{}".format(j['phone'])))
                        self.tbwshow_2.setItem(row, 7, QTableWidgetItem("{}".format(j['webside'])))

                        self.lname.append(j['name'])
                        row += 1
            elif self.typed == 'resting_place':
                self.tbwshow_2.setRowCount(i[self.typed].__len__())
                for j in i[self.typed]:
                    self.tbwshow_2.setItem(row, 0, QTableWidgetItem("{}".format(i['Province'])))
                    self.tbwshow_2.setItem(row, 1, QTableWidgetItem("{}".format(j['name'])))
                    self.tbwshow_2.setItem(row, 2, QTableWidgetItem("{}".format(j['place'])))
                    self.tbwshow_2.setItem(row, 3, QTableWidgetItem("{}".format(j['openday'])))
                    self.tbwshow_2.setItem(row, 4, QTableWidgetItem("{}".format(j['room'])))
                    self.tbwshow_2.setItem(row, 5, QTableWidgetItem("{}".format(j['pool'])))
                    self.tbwshow_2.setItem(row, 6, QTableWidgetItem("{}".format(j['food_room'])))
                    self.tbwshow_2.setItem(row, 7, QTableWidgetItem("{} - {}".format(j['check_in'], j['check_out'])))
                    self.lname.append(j['name'])
                    row += 1

    def retranslateUi(self, Showdatapage):
        _translate = QtCore.QCoreApplication.translate
        Showdatapage.setWindowTitle(_translate("Showdatapage", "ShowData"))
        self.butBack.setText(_translate("Showdatapage", "Back"))
        self.but_Home.setText(_translate("Showdatapage", "Home"))
        self.label.setText(_translate("Showdatapage", "เลือกสถานที่ที่ต้องการคอมเม้น"))
        self.pushButton_2.setText(_translate("Showdatapage", "Enter"))
        self.pushButton.setText(_translate("Showdatapage", "Comment"))


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    Showdatapage = QtWidgets.QWidget()
    ui = Ui_Showdatapage()
    ui.setupUi(Showdatapage)
    Showdatapage.show()
    sys.exit(app.exec_())
