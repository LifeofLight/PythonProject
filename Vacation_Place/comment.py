# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'comment.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import pymongo
from PyQt5 import QtCore, QtGui, QtWidgets
import dns


class Ui_comment(object):
    def __init__(self):
        self.tern = ''
        self.typed = ''
        self.province = ''
        self.opentime = ''
        self.name = ''
        self.indexed=0

    def setupUi(self, comment):
        comment.setObjectName("comment")
        comment.resize(799, 476)
        self.lblName = QtWidgets.QLabel(comment)
        self.lblName.setGeometry(QtCore.QRect(100, 10, 300, 71))
        font = QtGui.QFont()
        font.setFamily("Itim")
        font.setPointSize(15)
        self.lblName.setFont(font)
        self.lblName.setObjectName("lblName")

        self.txtComment = QtWidgets.QTextEdit(comment)
        self.txtComment.setGeometry(QtCore.QRect(100, 140, 561, 271))
        self.txtComment.setObjectName("txtComment")
        self.rbut5 = QtWidgets.QRadioButton(comment)
        self.rbut5.setGeometry(QtCore.QRect(100, 100, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Itim")
        font.setPointSize(12)
        self.rbut5.setFont(font)
        self.rbut5.setObjectName("rbut5")
        self.buttonGroup = QtWidgets.QButtonGroup(comment)
        self.buttonGroup.setObjectName("buttonGroup")
        self.buttonGroup.addButton(self.rbut5)
        self.label = QtWidgets.QLabel(comment)
        self.label.setGeometry(QtCore.QRect(100, 55, 241, 51))
        self.label.setObjectName("label")
        self.rbut4 = QtWidgets.QRadioButton(comment)
        self.rbut4.setGeometry(QtCore.QRect(230, 100, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Itim")
        font.setPointSize(12)
        self.rbut4.setFont(font)
        self.rbut4.setObjectName("rbut4")
        self.buttonGroup.addButton(self.rbut4)
        self.rbut3 = QtWidgets.QRadioButton(comment)
        self.rbut3.setGeometry(QtCore.QRect(350, 100, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Itim")
        font.setPointSize(12)
        self.rbut3.setFont(font)
        self.rbut3.setObjectName("rbut3")
        self.buttonGroup.addButton(self.rbut3)
        self.rbut2 = QtWidgets.QRadioButton(comment)
        self.rbut2.setGeometry(QtCore.QRect(470, 100, 121, 31))
        font = QtGui.QFont()
        font.setFamily("Itim")
        font.setPointSize(12)
        self.rbut2.setFont(font)
        self.rbut2.setObjectName("rbut2")
        self.buttonGroup.addButton(self.rbut2)
        self.rbut1 = QtWidgets.QRadioButton(comment)
        self.rbut1.setGeometry(QtCore.QRect(590, 100, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Itim")
        font.setPointSize(12)
        self.rbut1.setFont(font)
        self.rbut1.setObjectName("rbut1")
        self.buttonGroup.addButton(self.rbut1)
        self.pushButton = QtWidgets.QPushButton(comment)
        self.pushButton.setGeometry(QtCore.QRect(350, 430, 75, 23))
        self.pushButton.setStyleSheet("QPushButton{\n"
                                  "background-color: #ddd;\n"
                                  "border: none;\n"
                                  "color: black;\n"
                                  "transition: 0.3s;\n"
                                  "}\n"
                                  "QPushButton:hover{\n"
                                  "transition-delay:3s;\n"
                                  "background-color:#4CAF50;\n"
                                  "color: rgb(255, 255, 255);\n"
                                  "}")
        self.pushButton.setObjectName("pushButton")

        self.pushButton.clicked.connect(self.checkindex)
        self.pushButton.clicked.connect(self.add_comment)

        self.retranslateUi(comment)
        QtCore.QMetaObject.connectSlotsByName(comment)

        self.thiswindow = comment


    def checkindex(self):
        connectMongodb = 'mongodb+srv://Kornwara:2tIbDeNWUF7Yjswi@cluster0.ezb5a.mongodb.net/<dbname>?retryWrites=true&w=majority'
        with pymongo.MongoClient(connectMongodb)as conn:  # add comment
            db = conn.get_database('VacationPlace')
            have = True
            where = {'$and': [{'ภาค': self.tern}, {'Province': self.province}, {self.typed: {'$exists': have}}]}
            cursor = db.Province.find(where)
            indexed = 0
            for i in cursor:
                for j in i[self.typed]:
                    if (j['name'] == self.name):
                        self.indexed=indexed
                    indexed += 1

    def add_comment(self):
        connectMongodb = 'mongodb+srv://Kornwara:2tIbDeNWUF7Yjswi@cluster0.ezb5a.mongodb.net/<dbname>?retryWrites=true&w=majority'
        commented = self.txtComment.toPlainText()
        score = self.check_Rbut()
        if score == 0:
            self.messageBox()
        else:
            with pymongo.MongoClient(connectMongodb)as conn:  # add comment
                db = conn.get_database('VacationPlace')
                result = db.Province.update_one(
                    {'$and': [{'Province': self.province}, {self.typed+'.'+str(self.indexed)+'.name': self.name}]},
                    {'$push': {self.typed+'.'+str(self.indexed)+'.Comment': {'comment': commented, 'Score': score}}})
                print("Match :{}\nUpdate :{}".format(result.matched_count, result.modified_count))
                self.gotoshow()

    def settext(self, tern, typed, province, name,opentime):
        self.tern = tern
        self.typed = typed
        self.province = province
        self.name = name
        self.opentime=opentime
        self.lblName.setText(name)

    def messageBox(self):
        mBox = QtWidgets.QMessageBox()
        mBox.setWindowTitle('have not Score')
        mBox.setText('Please choose Score')
        mBox.setStandardButtons(QtWidgets.QMessageBox.Ok)
        mBox.setStyleSheet("QLabel{min-width: 200 px; min-height:50 px; font-size: 20px;font-family:Itim} "
                           "QPushButton{ width:20px; font-size: 15px; font-family:Itim}}");
        mBox.exec_()

    def check_Rbut(self):
        if self.rbut1.isChecked():
            score = 1
        elif self.rbut2.isChecked():
            score = 2
        elif self.rbut3.isChecked():
            score = 3
        elif self.rbut4.isChecked():
            score = 4
        elif self.rbut5.isChecked():
            score = 5
        else:
            score = 0
        return score

    def gotoshow(self):
        from showdata import Ui_Showdatapage
        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_Showdatapage()
        self.ui.setupUi(self.window)
        self.ui.settext(self.tern,self.typed,self.province,self.opentime)
        self.ui.display()
        self.window.show()
        self.thiswindow.hide()

    def retranslateUi(self, comment):
        _translate = QtCore.QCoreApplication.translate
        comment.setWindowTitle(_translate("comment", "VacationPlaces  "))
        self.lblName.setText(_translate("comment", "ชื่อสถานที่"))
        self.txtComment.setHtml(_translate("comment",
                                           "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                           "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                           "p, li { white-space: pre-wrap; }\n"
                                           "</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
                                           "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.rbut5.setText(_translate("comment", "5 คะแนน"))
        self.label.setText(_translate("comment", "คะแนนที่ต้องการจะให้ 5คือมากที่สุด 1น้อยที่สุด"))
        self.rbut4.setText(_translate("comment", "4 คะแนน"))
        self.rbut3.setText(_translate("comment", "3 คะแนน"))
        self.rbut2.setText(_translate("comment", "2 คะแนน"))
        self.rbut1.setText(_translate("comment", "1 คะแนน"))
        self.pushButton.setText(_translate("comment", "Enter"))


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    comment = QtWidgets.QWidget()
    ui = Ui_comment()
    ui.setupUi(comment)
    comment.show()
    sys.exit(app.exec_())
